<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | My Inspiration...]]></title>
  <link href="http://sapardi2014.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://sapardi2014.github.io/"/>
  <updated>2014-03-06T21:45:33+07:00</updated>
  <id>http://sapardi2014.github.io/</id>
  <author>
    <name><![CDATA[Sapardi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Curl: Restfull Web Service Consumers]]></title>
    <link href="http://sapardi2014.github.io/Linux/curl-restfull-web-service-consumers/"/>
    <updated>2014-03-06T18:37:41+07:00</updated>
    <id>http://sapardi2014.github.io/Linux/curl-restfull-web-service-consumers</id>
    <content type="html"><![CDATA[<h3>CURL &ndash; Client Restfull Web Service Consumers</h3>

<hr />

<p>Restfull Web Service adalah teknologi SOA yang berbasis pada Rest. Terdapat beberapa operasi pada Rest diantaranya :</p>

<ul>
<li>GET</li>
<li>POST</li>
<li>PUT</li>
<li>DELETE</li>
</ul>


<p>Pada sesi ini akan dibahas mengenai <strong>curl</strong> command di OS Linux. Curl adalah restfull client berbasis Linux yang dijalankan melalui command prompt / terminal. Seringkali untuk menguji Restfull Web Service menggunakan web browser atau add-on yang disediakan oleh web browser tersebut. Di Linux ada alternatif lain yang dapat melakukan proses tersebut.</p>

<p>Perintah dasar menggunakan <strong>Curl</strong> adalah:</p>

<pre><code>curl -X GET -D header.txt http://example.com/some/path
</code></pre>

<p>Perintah diatas akan melakukan HTTP GET request untuk URI <a href="http://example.com/some/path.">http://example.com/some/path.</a> Dan akan menyimpan hasil dari response kedalam file <em>header.txt</em> (lihat option -D)</p>

<p>Beberapa <em>option</em> perintah <strong>Curl</strong> yang sering digunakan adalah :</p>

<ul>
<li><p><code>-D filename</code></p>

<pre><code>  Menyimpan response header kedalam file *filename*
</code></pre></li>
<li><p><code>-i</code></p>

<p>  Mengirim response header kedalam standard output, bersama dengan response body</p></li>
<li><p><code>--basic --user username:password</code></p>

<p>  Authenticate request menggunakan HTTP Basic authentication, dengan username dan password yang spesifik</p></li>
<li><p><code>-H "header: value"</code></p>

<p> Mengatur request header header dengan value</p></li>
</ul>


<blockquote><p><strong>Notes</strong>: Perhatikan <em>double quotes</em> yang akan passing semua header dalam <em>single string</em>. Untuk setting multiple request header dapat menggunakan multiple -H</p></blockquote>

<ul>
<li><p><code>-T filename</code></p>

<p>  Mengirim isi dari file filename sebagai body dari request PUT. Option ini berguna untuk proses upload file.</p></li>
<li><p><code>-k</code></p>

<p>  Mengabaikan SSL certificate. Sangat berguna ketika berhubungan dengan server development dengan Self-signed Certificate.</p></li>
<li><p><code>h</code></p>

<p>  Untuk bantuan (help). Menampilkan semua option dari command Curl</p></li>
</ul>


<p>Jadi kesimpulannya Restfull Web Service tidak harus menggunakan web browser, bagi Anda yang menyukai dunia CLI di terminal Linux, ini adalah alternatif nya. Selamat mencoba, silahkan berikan saran atau komentar.</p>

<h3>Referensi:</h3>

<p><a href="http://software.endy.muhardin.com/aplikasi/membuat-self-signed-certificate/">Cara membuat Self-signed Certificate</a></p>

<p><a href="http://blog.engelke.com/2009/10/20/curl-cheat-sheet/">Curl Cheat Sheet</a></p>
]]></content>
  </entry>
  
</feed>
